FROM defterai/qt-win32:v5.15.7

RUN \
	ln -sf /opt/mxe/usr/bin/i686-w64-mingw32.static-addr2line /usr/bin/addr2line && \
	ln -sf /opt/mxe/usr/bin/i686-w64-mingw32.static-ar /usr/bin/ar && \
	ln -sf /opt/mxe/usr/bin/i686-w64-mingw32.static-as /usr/bin/as && \
	ln -sf /opt/mxe/usr/bin/i686-w64-mingw32.static-c++ /usr/bin/c++ && \
	ln -sf /opt/mxe/usr/bin/i686-w64-mingw32.static-c++filt /usr/bin/c++filt && \
	ln -sf /opt/mxe/usr/bin/i686-w64-mingw32.static-cmake /usr/bin/cmake && \
	ln -sf /opt/mxe/usr/bin/i686-w64-mingw32.static-cpack /usr/bin/cpack && \
	ln -sf /opt/mxe/usr/bin/i686-w64-mingw32.static-cpp /usr/bin/cpp && \
	ln -sf /opt/mxe/usr/bin/i686-w64-mingw32.static-dlltool /usr/bin/dlltool && \
	ln -sf /opt/mxe/usr/bin/i686-w64-mingw32.static-dllwrap /usr/bin/dllwrap && \
	ln -sf /opt/mxe/usr/bin/i686-w64-mingw32.static-elfedit /usr/bin/elfedit && \
	ln -sf /opt/mxe/usr/bin/i686-w64-mingw32.static-g++ /usr/bin/g++ && \
	ln -sf /opt/mxe/usr/bin/i686-w64-mingw32.static-gcc /usr/bin/gcc && \
	ln -sf /opt/mxe/usr/bin/i686-w64-mingw32.static-gcc-11.3.0 /usr/bin/gcc-11.3.0 && \
	ln -sf /opt/mxe/usr/bin/i686-w64-mingw32.static-gcc-ar /usr/bin/gcc-ar && \
	ln -sf /opt/mxe/usr/bin/i686-w64-mingw32.static-gcc-nm /usr/bin/gcc-nm && \
	ln -sf /opt/mxe/usr/bin/i686-w64-mingw32.static-gcc-ranlib /usr/bin/gcc-ranlib && \
	ln -sf /opt/mxe/usr/bin/i686-w64-mingw32.static-gcov /usr/bin/gcov && \
	ln -sf /opt/mxe/usr/bin/i686-w64-mingw32.static-gcov-dump /usr/bin/gcov-dump && \
	ln -sf /opt/mxe/usr/bin/i686-w64-mingw32.static-gcov-tool /usr/bin/gcov-tool && \
	ln -sf /opt/mxe/usr/bin/i686-w64-mingw32.static-gfortran /usr/bin/gfortran && \
	ln -sf /opt/mxe/usr/bin/i686-w64-mingw32.static-gprof /usr/bin/gprof && \
	ln -sf /opt/mxe/usr/bin/i686-w64-mingw32.static-ld /usr/bin/ld && \
	ln -sf /opt/mxe/usr/bin/i686-w64-mingw32.static-ld.bfd /usr/bin/ld.bfd && \
	ln -sf /opt/mxe/usr/bin/i686-w64-mingw32.static-lto-dump /usr/bin/lto-dump && \
	ln -sf /opt/mxe/usr/bin/i686-w64-mingw32.static-meson /usr/bin/meson && \
	ln -sf /opt/mxe/usr/bin/i686-w64-mingw32.static-nm /usr/bin/nm && \
	ln -sf /opt/mxe/usr/bin/i686-w64-mingw32.static-objcopy /usr/bin/objcopy && \
	ln -sf /opt/mxe/usr/bin/i686-w64-mingw32.static-objdump /usr/bin/objdump && \
	ln -sf /opt/mxe/usr/bin/i686-w64-mingw32.static-pcre-config /usr/bin/pcre-config && \
	ln -sf /opt/mxe/usr/bin/i686-w64-mingw32.static-pcre2-config /usr/bin/pcre2-config && \
	ln -sf /opt/mxe/usr/bin/i686-w64-mingw32.static-pg_config /usr/bin/pg_config && \
	ln -sf /opt/mxe/usr/bin/i686-w64-mingw32.static-pkg-config /usr/bin/pkg-config && \
	ln -sf /opt/mxe/usr/bin/i686-w64-mingw32.static-ranlib /usr/bin/ranlib && \
	ln -sf /opt/mxe/usr/bin/i686-w64-mingw32.static-readelf /usr/bin/readelf && \
	ln -sf /opt/mxe/usr/bin/i686-w64-mingw32.static-size /usr/bin/size && \
	ln -sf /opt/mxe/usr/bin/i686-w64-mingw32.static-strings /usr/bin/strings && \
	ln -sf /opt/mxe/usr/bin/i686-w64-mingw32.static-strip /usr/bin/strip && \
	ln -sf /opt/mxe/usr/bin/i686-w64-mingw32.static-windmc /usr/bin/windmc && \
	ln -sf /opt/mxe/usr/bin/i686-w64-mingw32.static-windres /usr/bin/windres

# ffmpeg 4.4.1
RUN \
	cd /opt && \
	git clone --depth 1 --branch n4.4.1 https://git.ffmpeg.org/ffmpeg.git

RUN \
	cd /opt/ffmpeg && \
	./configure --arch=x86 --target-os=mingw32 --enable-cross-compile --enable-static --enable-pic --disable-x86asm --disable-doc --disable-programs && \
	make install

# ASIO SDK 2.3.3
RUN \
	cd /opt/ && \
	rm -rf asiosdk2 && \
	wget -O asiosdk.zip https://www.steinberg.net/asiosdk && \
	unzip -o asiosdk.zip -d . && \
	mv asiosdk_2.3.3_2019-06-14 asiosdk2 && \
	rm asiosdk.zip

# PortAudio 19.7.0
RUN \
	cd /opt/ && \
	git clone --depth 1 --branch v19.7.0 https://github.com/PortAudio/portaudio.git

RUN \
	cd /opt/portaudio && \
	./configure --host=i686-w64-mingw32 --with-winapi=asio --with-asiodir=/opt/asiosdk2 && \
	make install

# ogg 1.3.5, vorbis 1.3.7
RUN \
	cd /opt/ && \
	git clone --depth 1 --branch v1.3.5 https://gitlab.xiph.org/xiph/ogg && \
	git clone --depth 1 --branch v1.3.7 https://gitlab.xiph.org/xiph/vorbis

RUN \
	cd /opt/ogg && \
	./autogen.sh && \
	./configure --prefix=/mingw32 --host=i686-w64-mingw32 && \
	make install

RUN \
	cd /opt/vorbis && \
	./autogen.sh && \
	./configure --prefix=/mingw32 --host=i686-w64-mingw32 && \
	make install

# miniupnpc 2.2.4
RUN \
	cd /opt && \
	git clone --depth 1 --branch miniupnpc_2_2_4 https://github.com/miniupnp/miniupnp

RUN \
	cd /opt/miniupnp/miniupnpc && \
	cmake -D UPNPC_BUILD_STATIC=true -D UPNPC_BUILD_SHARED=false -D UPNPC_BUILD_TESTS=false -D UPNPC_BUILD_SAMPLE=false . && \
	make -f Makefile.mingw && \
	make install

RUN \
	exit 0
